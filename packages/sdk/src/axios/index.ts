/**
 * Generated by orval v7.0.1 üç∫
 * Do not edit manually.
 * My API
 * OpenAPI spec version: 1.0.0
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";
import type {
  ErrorResponse,
  GetApiAdminUserId200,
  HealthcheckResponse,
  LoginTokens,
  PostApiPublicAuthLoginBody,
  PostApiPublicAuthRefreshBody,
  PostApiPublicAuthRegisterBody,
  PostApiPublicAuthResendValidationEmailBody,
  PostApiPublicAuthResetPasswordBody,
  PostApiPublicAuthResetPasswordRequestBody,
  PostApiPublicAuthValidateAccountBody,
  RefreshTokens,
  ResetPasswordResponse,
} from "./index.schemas";

export const getApiAdminUserId = <TData = AxiosResponse<GetApiAdminUserId200>>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/admin/user/:id`, options);
};

export const postApiPublicAuthLogin = <TData = AxiosResponse<LoginTokens>>(
  postApiPublicAuthLoginBody: PostApiPublicAuthLoginBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/public/auth/login`,
    postApiPublicAuthLoginBody,
    options,
  );
};

export const postApiPublicAuthRegister = <TData = AxiosResponse<ErrorResponse>>(
  postApiPublicAuthRegisterBody: PostApiPublicAuthRegisterBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/public/auth/register`,
    postApiPublicAuthRegisterBody,
    options,
  );
};

export const postApiPublicAuthRefresh = <TData = AxiosResponse<RefreshTokens>>(
  postApiPublicAuthRefreshBody: PostApiPublicAuthRefreshBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/public/auth/refresh`,
    postApiPublicAuthRefreshBody,
    options,
  );
};

export const postApiPublicAuthResetPassword = <
  TData = AxiosResponse<ResetPasswordResponse>,
>(
  postApiPublicAuthResetPasswordBody: PostApiPublicAuthResetPasswordBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/public/auth/reset-password`,
    postApiPublicAuthResetPasswordBody,
    options,
  );
};

export const postApiPublicAuthResetPasswordRequest = <
  TData = AxiosResponse<ErrorResponse>,
>(
  postApiPublicAuthResetPasswordRequestBody: PostApiPublicAuthResetPasswordRequestBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/public/auth/reset-password-request`,
    postApiPublicAuthResetPasswordRequestBody,
    options,
  );
};

export const postApiPublicAuthValidateAccount = <
  TData = AxiosResponse<ErrorResponse>,
>(
  postApiPublicAuthValidateAccountBody: PostApiPublicAuthValidateAccountBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/public/auth/validate-account`,
    postApiPublicAuthValidateAccountBody,
    options,
  );
};

export const postApiPublicAuthResendValidationEmail = <
  TData = AxiosResponse<ErrorResponse>,
>(
  postApiPublicAuthResendValidationEmailBody: PostApiPublicAuthResendValidationEmailBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(
    `/api/public/auth/resend-validation-email`,
    postApiPublicAuthResendValidationEmailBody,
    options,
  );
};

export const getApiPublicHealthcheck = <
  TData = AxiosResponse<HealthcheckResponse>,
>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/public/healthcheck`, options);
};

export type GetApiAdminUserIdResult = AxiosResponse<GetApiAdminUserId200>;
export type PostApiPublicAuthLoginResult = AxiosResponse<LoginTokens>;
export type PostApiPublicAuthRegisterResult = AxiosResponse<ErrorResponse>;
export type PostApiPublicAuthRefreshResult = AxiosResponse<RefreshTokens>;
export type PostApiPublicAuthResetPasswordResult =
  AxiosResponse<ResetPasswordResponse>;
export type PostApiPublicAuthResetPasswordRequestResult =
  AxiosResponse<ErrorResponse>;
export type PostApiPublicAuthValidateAccountResult =
  AxiosResponse<ErrorResponse>;
export type PostApiPublicAuthResendValidationEmailResult =
  AxiosResponse<ErrorResponse>;
export type GetApiPublicHealthcheckResult = AxiosResponse<HealthcheckResponse>;
