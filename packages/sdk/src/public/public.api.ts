/**
 * Generated by orval v7.0.1 🍺
 * Do not edit manually.
 * My API
 * OpenAPI spec version: 1.0.0
 */

import type { AxiosRequestConfig, AxiosResponse, AxiosInstance } from 'axios';
import type {
  ErrorResponse,
  HealthcheckResponse,
  LoginTokens,
  PostApiPublicAuthLoginBody,
  PostApiPublicAuthRefreshBody,
  PostApiPublicAuthRegisterBody,
  PostApiPublicAuthResendValidationEmailBody,
  PostApiPublicAuthResetPasswordBody,
  PostApiPublicAuthResetPasswordRequestBody,
  PostApiPublicAuthValidateAccountBody,
  RefreshTokens,
  ResetPasswordResponse
} from '.././models';

export const getPublicApiCollection = (axios: AxiosInstance) => {
  const postAuthLogin = <TData = AxiosResponse<LoginTokens>>(
    postApiPublicAuthLoginBody: PostApiPublicAuthLoginBody,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(`/api/public/auth/login`, postApiPublicAuthLoginBody, options);
  };
  const postAuthRegister = <TData = AxiosResponse<ErrorResponse>>(
    postApiPublicAuthRegisterBody: PostApiPublicAuthRegisterBody,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(`/api/public/auth/register`, postApiPublicAuthRegisterBody, options);
  };
  const postAuthRefresh = <TData = AxiosResponse<RefreshTokens>>(
    postApiPublicAuthRefreshBody: PostApiPublicAuthRefreshBody,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(`/api/public/auth/refresh`, postApiPublicAuthRefreshBody, options);
  };
  const postAuthResetPassword = <TData = AxiosResponse<ResetPasswordResponse>>(
    postApiPublicAuthResetPasswordBody: PostApiPublicAuthResetPasswordBody,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(`/api/public/auth/reset-password`, postApiPublicAuthResetPasswordBody, options);
  };
  const postAuthResetPasswordRequest = <TData = AxiosResponse<ErrorResponse>>(
    postApiPublicAuthResetPasswordRequestBody: PostApiPublicAuthResetPasswordRequestBody,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(`/api/public/auth/reset-password-request`, postApiPublicAuthResetPasswordRequestBody, options);
  };
  const postAuthValidateAccount = <TData = AxiosResponse<ErrorResponse>>(
    postApiPublicAuthValidateAccountBody: PostApiPublicAuthValidateAccountBody,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(`/api/public/auth/validate-account`, postApiPublicAuthValidateAccountBody, options);
  };
  const postAuthResendValidationEmail = <TData = AxiosResponse<ErrorResponse>>(
    postApiPublicAuthResendValidationEmailBody: PostApiPublicAuthResendValidationEmailBody,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(`/api/public/auth/resend-validation-email`, postApiPublicAuthResendValidationEmailBody, options);
  };
  const getHealthcheck = <TData = AxiosResponse<HealthcheckResponse>>(options?: AxiosRequestConfig): Promise<TData> => {
    return axios.get(`/api/public/healthcheck`, options);
  };
  return {
    postAuthLogin,
    postAuthRegister,
    postAuthRefresh,
    postAuthResetPassword,
    postAuthResetPasswordRequest,
    postAuthValidateAccount,
    postAuthResendValidationEmail,
    getHealthcheck
  };
};
export type PostAuthLoginResult = AxiosResponse<LoginTokens>;
export type PostAuthRegisterResult = AxiosResponse<ErrorResponse>;
export type PostAuthRefreshResult = AxiosResponse<RefreshTokens>;
export type PostAuthResetPasswordResult = AxiosResponse<ResetPasswordResponse>;
export type PostAuthResetPasswordRequestResult = AxiosResponse<ErrorResponse>;
export type PostAuthValidateAccountResult = AxiosResponse<ErrorResponse>;
export type PostAuthResendValidationEmailResult = AxiosResponse<ErrorResponse>;
export type GetHealthcheckResult = AxiosResponse<HealthcheckResponse>;
