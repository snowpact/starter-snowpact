/**
 * Generated by orval v7.0.1 üç∫
 * Do not edit manually.
 * Starter API
 * OpenAPI spec version: 1.0.0
 */
import { z as zod } from 'zod';

export const zodAuthLoginBody = zod.object({
  email: zod.string().email(),
  password: zod.string().min(1)
});

export const zodAuthLoginResponse = zod.object({
  accessToken: zod.string(),
  refreshToken: zod.string()
});

export const zodAuthRegisterBody = zod.object({
  email: zod.string().email(),
  password: zod.string().min(1)
});

export const zodAuthRegisterResponse = zod.object({
  message: zod.string(),
  code: zod.string()
});

export const zodAuthRefreshBody = zod.object({
  accessToken: zod.string(),
  refreshToken: zod.string()
});

export const zodAuthRefreshResponse = zod.object({
  accessToken: zod.string(),
  refreshToken: zod.string()
});

export const zodAuthResetPasswordBody = zod.object({
  token: zod.string(),
  password: zod.string()
});

export const zodAuthResetPasswordResponse = zod.object({
  code: zod.string(),
  message: zod.string()
});

export const zodAuthResetPasswordRequestBody = zod.object({
  email: zod.string().email()
});

export const zodAuthResetPasswordRequestResponse = zod.object({
  message: zod.string(),
  code: zod.string()
});

export const zodAuthValidateAccountBody = zod.object({
  token: zod.string().min(1)
});

export const zodAuthValidateAccountResponse = zod.object({
  message: zod.string(),
  code: zod.string()
});

export const zodAuthResendValidationEmailBody = zod.object({
  email: zod.string().email().optional(),
  token: zod.string().optional()
});

export const zodAuthResendValidationEmailResponse = zod.object({
  message: zod.string(),
  code: zod.string()
});

export const zodHealthcheckResponse = zod.object({
  message: zod.string(),
  timestamp: zod.string(),
  uptime: zod.number()
});
